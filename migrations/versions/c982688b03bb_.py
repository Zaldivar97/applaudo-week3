"""empty message

Revision ID: c982688b03bb
Revises: 
Create Date: 2020-05-28 13:15:29.845656

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c982688b03bb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('todo_list_tag')
    op.alter_column('tag', 'name',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.drop_constraint('tag_name_key', 'tag', type_='unique')
    op.alter_column('task', 'description',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('task', 'title',
               existing_type=sa.VARCHAR(length=40),
               nullable=True)
    op.create_unique_constraint(None, 'task', ['title'])
    op.alter_column('todo_list', 'name',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
    op.drop_constraint('todo_list_name_key', 'todo_list', type_='unique')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('todo_list_name_key', 'todo_list', ['name'])
    op.alter_column('todo_list', 'name',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    op.drop_constraint(None, 'task', type_='unique')
    op.alter_column('task', 'title',
               existing_type=sa.VARCHAR(length=40),
               nullable=False)
    op.alter_column('task', 'description',
               existing_type=sa.TEXT(),
               nullable=False)
    op.create_unique_constraint('tag_name_key', 'tag', ['name'])
    op.alter_column('tag', 'name',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
    op.create_table('todo_list_tag',
    sa.Column('todo_list_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tag_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.tag_id'], name='todo_list_tag_tag_id_fkey'),
    sa.ForeignKeyConstraint(['todo_list_id'], ['todo_list.todo_list_id'], name='todo_list_tag_todo_list_id_fkey'),
    sa.PrimaryKeyConstraint('todo_list_id', 'tag_id', name='todo_list_tag_pkey')
    )
    # ### end Alembic commands ###
